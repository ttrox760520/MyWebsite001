@model List<myhtml.Models.StudentList>
@{
    ViewBag.Title = "學生資料";
}

<h2>學生資料</h2>

<p>
    @Html.ActionLink("新增", "Create", "StudentList")
</p>
<table class="table">
    <tr>
        <th>
            @Html.DisplayName("排序")
        </th>
        <th>
            @Html.DisplayName("學號")
        </th>
        <th>
            @Html.DisplayName("座號")
        </th>
        <th>
            @Html.DisplayName("姓名")
        </th>
        <th>
            @Html.DisplayName("電話")
        </th>
        <th>
            @Html.DisplayName("緊急連絡人")
        </th>
        <th>
            @Html.DisplayName("緊急連絡人電話")
        </th>
        <th></th>
    </tr>
    @for (int i = 0; i < Model.Count; i++)
    {
        <tr>
            <td>
                @Html.Label("seq", (i + 1).ToString())
            </td>
            <td>
                @Html.DisplayFor(p => Model[i].StudentID)
            </td>
            <td>
                @Html.DisplayFor(p => Model[i].ClassID)
            </td>
            <td>
                @Html.DisplayFor(p => Model[i].Name)
            </td>
            <td>
                @Html.DisplayFor(p => Model[i].Phone)
            </td>
            <td>
                @Html.DisplayFor(p => Model[i].EmergencyContact)
            </td>
            <td>
                @Html.DisplayFor(p => Model[i].EmergencyPhone)
            </td>

            <td>
                @* 補充: @num = i為Url參數的寫法，Controller/Action/ActionParameter中的參數就會是i，也就是第幾筆資料 *@
                @Html.ActionLink("編輯", "Edit", "StudentList", new { id = i }, null) |
                @Html.ActionLink("詳細資料", "Details", "StudentList", new { id = i }, null) |
                @* 補充: 最後一個參數onclick內可以放Url/method，以這個例子是回傳一個js method *@
                @Html.ActionLink("刪除", "Delete", "StudentList", new { id = i }, new { @onclick = "return confirm('確定刪除?');" })
            </td>
        </tr>
    }
</table>
